version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: algoreport-postgres
    environment:
      POSTGRES_DB: algoreport
      POSTGRES_USER: algoreport
      POSTGRES_PASSWORD: algoreport123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - algoreport-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: algoreport-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - algoreport-network

  # Zookeeper (Kafka dependency)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: algoreport-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - algoreport-network

  # Kafka Message Queue
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: algoreport-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - algoreport-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: algoreport-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - algoreport-network

  # Kibana (Elasticsearch visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: algoreport-kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    networks:
      - algoreport-network

  # Kafka UI (optional - for development)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: algoreport-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: algoreport-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - algoreport-network

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  elasticsearch_data:

networks:
  algoreport-network:
    driver: bridge